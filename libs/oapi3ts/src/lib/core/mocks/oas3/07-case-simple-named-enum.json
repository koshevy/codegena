{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "01 â€” Simplest case"
  },
  "paths": {
    "/": {
      "summary": "Simplest operation with GET method support",
      "get": {
        "operationId": "simplestGet01",
        "summary": "GET with inline query parameters, inline successful response, no body request",
        "parameters": [
          {
            "name": "inlineEnumProperty",
            "in": "query",
            "description": "Query parameter with inline enum-schema",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["#", "$", "^"]
            }
          },
          {
            "name": "inlineObjectEnumProperty",
            "in": "query",
            "description": "Query parameter with inline enum-schema and object values",
            "required": true,
            "schema": {
              "enum": [
                {"id": 1, "group": 0},
                {"id": 2, "group": 0},
                {"id": 1, "groups": [0, 1]}
              ]
            }
          },
          {
            "name": "namedEnumProperty",
            "in": "query",
            "description": "Query parameter refers to named enum",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/NamedEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful result",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Abstract Success Response",
                  "description": "An object with abstract data, used in successful response",
                  "type": "object",
                  "properties": {
                    "inlineEnumProperty": {
                      "enum": [1, 2, 3]
                    },
                    "namedEnumProperty": {
                      "$ref": "#/components/schemas/NamedEnum"
                    }
                  },
                  "required": ["inlineEnumProperty"]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NamedEnum": {
        "type": "string",
        "description": "Named enum will be transformed to a named data-type",
        "enum": [
          "first-value",
          "second-value",
          "third-value"
        ]
      }
    }
  }
}
